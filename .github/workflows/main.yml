# .github/workflows/main.yml

name: Greathost.es Auto Renew

on:
  # 1. 定时触发：每30分钟运行一次
  schedule:
    - cron: '*/30 * * * *'
  
  # 2. 手动触发：允许你在 Actions 页面点击 "Run workflow" 进行即时测试
  workflow_dispatch:

jobs:
  renew-and-report:
    runs-on: ubuntu-latest

    # 授予工作流写入仓库内容的权限，用于自动提交 README.md
    permissions:
      contents: write

    steps:
      # 第 1 步：检出你的代码库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第 2 步：设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 第 3 步：安装 Playwright 及其依赖
      - name: Install dependencies and Playwright browsers
        run: |
          pip install playwright
          python -m playwright install --with-deps

      # 第 4 步：运行 Greathost.es 的续期脚本
      - name: Run Greathost renew script
        run: python greathost.py # 确保你的脚本文件名是 greathost.py
        env:
          # --- 在 GitHub Secrets 中配置以下变量 ---
          GREATHOS_REMEMBER_COOKIE_NAME: ${{ secrets.GREATHOS_REMEMBER_COOKIE_NAME }}
          GREATHOS_REMEMBER_COOKIE_VALUE: ${{ secrets.GREATHOS_REMEMBER_COOKIE_VALUE }}
          GREATHOS_SERVER_URLS: ${{ secrets.GREATHOS_SERVER_URLS }}
          
          # --- 可选的备用认证 ---
          GREATHOS_EMAIL: ${{ secrets.GREATHOS_EMAIL }}
          GREATHOS_PASSWORD: ${{ secrets.GREATHOS_PASSWORD }}

      # 第 5 步：提交并推送 README.md 的变动
      - name: Commit and push if README.md changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          
          if git diff --staged --quiet; then
            echo "没有检测到 README.md 的变动，无需提交。"
          else
            git commit -m "docs: 自动更新 Greathost.es 续期状态"
            git push
            echo "README.md 已更新并成功推送到仓库。"
          fi
